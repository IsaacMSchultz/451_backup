CREATE TABLE Review  (
    ReviewID CHAR(22),
    ReviewText VARCHAR(300),
    PRIMARY KEY(ReviewID)
);

CREATE TABLE Location (
    StreetAddress VARCHAR(300),
    State VARCHAR(30),
    City VARCHAR(30),
    Zipcode INTEGER,
    Longitude VARCHAR(12),
    Latitude VARCHAR(12),
	UNIQUE (StreetAddress,City,State),
    PRIMARY KEY (StreetAddress,City,State)
);

CREATE TABLE Business (
    BusinessID CHAR(22),
    Name VARCHAR(30),
    OpenClosed BOOLEAN,
    PRIMARY KEY(BusinessID)
);

CREATE TABLE YelpUser (
    YelpUserID CHAR(22),
    Name VARCHAR(30),
    AverageStars FLOAT,
    FunnyVotes INTEGER,
    UsefulVotes INTEGER,
    CoolVotes INTEGER,
    NumberOfFans INTEGER,
    ReviewCount INTEGER,
    YelpingSince DATE,
    PRIMARY KEY(YelpUserID)
);

CREATE TABLE Friend ( /*I don't know if this is correct.*/
    YelpUserID CHAR(22),
    FriendID CHAR(22),
    PRIMARY KEY (YelpUserID),
    FOREIGN KEY (YelpUserID) REFERENCES YelpUser(YelpUserID)
);

CREATE TABLE Business_Attributes (
	BusinessID CHAR(22),
    HasWifi BOOLEAN,
    HasTV BOOLEAN,
    GoodForKids BOOLEAN,
    NoiseLevel VARCHAR(30),
    PriceRange VARCHAR(22),
    Caters BOOLEAN,
    Alcohol BOOLEAN,
    Attire VARCHAR(30),
    GoodForMeal BOOLEAN,
    Catagories VARCHAR(30),
    TakeOut BOOLEAN,
    Zipcode INTEGER,
    Delievers BOOLEAN,
    HasBikeParking BOOLEAN,
    AcceptsCreditCards BOOLEAN,
    OutdoorSeating BOOLEAN,
    TakesReservations BOOLEAN,
    PRIMARY KEY (BusinessID),
	FOREIGN KEY (BusinessID) REFERENCES Business(BusinessID)
);

CREATE TABLE Checkins(
	BusinessID CHAR(22),
	YelpUserID CHAR(22),
    PRIMARY KEY (BusinessID, YelpUserID),
    FOREIGN KEY (BusinessID) REFERENCES Business(BusinessID),
	FOREIGN KEY (YelpUserID) REFERENCES YelpUser(YelpUserID)
);

CREATE TABLE Checkins_Hour(
    Hour INTEGER,
	BusinessID CHAR(22),
	YelpUserID CHAR(22),
    PRIMARY KEY (BusinessID, YelpUserID),
    FOREIGN KEY (BusinessID) REFERENCES Business(BusinessID),
    FOREIGN KEY (YelpUserID) REFERENCES YelpUser(YelpUserID)
);

CREATE TABLE Checkins_Day( /*check with sakire abou this*/
    Day DATE,
	BusinessID CHAR(22),
	YelpUserID CHAR(22),
    PRIMARY KEY (BusinessID, YelpUserID),
    FOREIGN KEY (BusinessID) REFERENCES Business(BusinessID),
    FOREIGN KEY (YelpUserID) REFERENCES YelpUser(YelpUserID)
);

CREATE TABLE Business_Attributes_Attire(
    Attire VARCHAR(10),
	BusinessID CHAR(22),
    PRIMARY KEY (BusinessID, Attire),
    FOREIGN KEY(BusinessID) REFERENCES Business(BusinessID)
);

CREATE TABLE Business_Attributes_Good_For_Meal(
    Good_For_Meal VARCHAR(30),
	BusinessID CHAR(22),
    PRIMARY KEY (BusinessID, Good_For_Meal),
    FOREIGN KEY(BusinessID) REFERENCES Business(BusinessID)
);
CREATE TABLE Business_Attributes_Good_For_Kids(
    Good_for_Kids VARCHAR(30),
	BusinessID CHAR(22),
    PRIMARY KEY (BusinessID, Good_For_Kids),
	FOREIGN KEY(BusinessID) REFERENCES Business(BusinessID)
);

CREATE TABLE Business_Categories(
    Categories VARCHAR(100), /*some lists are very long*/
	BusinessID CHAR(22),
    PRIMARY KEY (BusinessID, Categories),
    FOREIGN KEY(BusinessID) REFERENCES Business(BusinessID)
);

CREATE TABLE Hours_of_Operation (
    OpenTime INTEGER,
    CloseTime INTEGER,
	BusinessID CHAR(22),
    PRIMARY KEY (BusinessID),
    FOREIGN KEY (BusinessID) REFERENCES Business(BusinessID)    
);

CREATE TABLE Parking (
	BusinessID CHAR(22),
    Street BOOLEAN,
    Garage BOOLEAN,
    Validated BOOLEAN,
    Lot BOOLEAN,
    Valet BOOLEAN,
    PRIMARY KEY(BusinessID),
	FOREIGN KEY (BusinessID) REFERENCES Business(BusinessID)
);

CREATE TABLE Located_At (
    BusinessID VARCHAR(22),
    StreetAddress VARCHAR(300),
    State VARCHAR(30),
    City VARCHAR(30),
    PRIMARY KEY (BusinessID, StreetAddress, City, State),
    FOREIGN KEY (BusinessID) REFERENCES Business(BusinessID),
    FOREIGN KEY (StreetAddress, City, State) REFERENCES Location(StreetAddress, City, State) /* This specifies that this combination specifically is a unique key */

);

CREATE TABLE Reviews (
    YelpUserID CHAR(22),
    ReviewID CHAR(22),
    BusinessID CHAR(22),
	PRIMARY KEY(YelpUserID, ReviewID, BusinessID),
	FOREIGN KEY (YelpUserID) REFERENCES YelpUser(YelpUserID),
	FOREIGN KEY (ReviewID) REFERENCES Review(ReviewID),
    FOREIGN KEY (BusinessID) REFERENCES Business(BusinessID)
);